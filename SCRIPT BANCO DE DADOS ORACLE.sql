--CREATE USER ALMOXARIFADO IDENTIFIED BY ALMOXARIFADO;
--GRANT DBA TO ALMOXARIFADO WITH ADMIN OPTION;

DROP TABLE MOVIMENTACAO;
DROP TABLE ESTOQUE;
DROP TABLE MATERIAL;
DROP TABLE LOCAIS;
DROP TABLE UNIDADE_MEDIDA;
DROP TABLE TIPO_MATERIAL;
DROP TABLE USERS;

DROP SEQUENCE LOCAIS_COD_SEQ;
DROP SEQUENCE MATERIAL_COD_SEQ;
DROP SEQUENCE UNIDADES_COD_SEQ;
DROP SEQUENCE TIPOS_COD_SEQ;
DROP SEQUENCE USERS_ID_SEQ;
DROP SEQUENCE ESTOQUE_ID_SEQ;
DROP SEQUENCE MOVIMENTACAO_COD_SEQ;

CREATE TABLE LOCAIS (
COD_LOCAL NUMBER(4) PRIMARY KEY,
NOME_LOCAL VARCHAR(20)
);

CREATE SEQUENCE LOCAIS_COD_SEQ
MINVALUE 1
MAXVALUE 99999
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE TRIGGER LOCAIS_COD_TRG 
            BEFORE INSERT ON LOCAIS
            FOR EACH ROW
                BEGIN
            IF :NEW.COD_LOCAL IS NULL THEN
                SELECT LOCAIS_COD_SEQ.NEXTVAL INTO :NEW.COD_LOCAL FROM DUAL;
            END IF;
            END;
/
ALTER TRIGGER LOCAIS_COD_TRG ENABLE;
            
INSERT INTO LOCAIS (NOME_LOCAL) VALUES ('A234');
INSERT INTO LOCAIS (NOME_LOCAL) VALUES ('A356');
INSERT INTO LOCAIS (NOME_LOCAL) VALUES ('A435');



CREATE TABLE UNIDADE_MEDIDA (
COD_UNID_MEDIDA NUMBER(4) PRIMARY KEY,
DESCRICAO_UNID_MEDIDA VARCHAR(20)
);

CREATE SEQUENCE UNIDADES_COD_SEQ
MINVALUE 1
MAXVALUE 99999
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE TRIGGER UNIDADES_COD_TRG 
            BEFORE INSERT ON UNIDADE_MEDIDA
            FOR EACH ROW
                BEGIN
            IF :NEW.COD_UNID_MEDIDA IS NULL THEN
                SELECT UNIDADES_COD_SEQ.NEXTVAL INTO :NEW.COD_UNID_MEDIDA FROM DUAL;
            END IF;
            END;
/
ALTER TRIGGER UNIDADES_COD_TRG ENABLE;
          
INSERT INTO UNIDADE_MEDIDA (DESCRICAO_UNID_MEDIDA) VALUES ('pçs');
INSERT INTO UNIDADE_MEDIDA (DESCRICAO_UNID_MEDIDA) VALUES ('Kgs');
INSERT INTO UNIDADE_MEDIDA (DESCRICAO_UNID_MEDIDA) VALUES ('lts');
INSERT INTO UNIDADE_MEDIDA (DESCRICAO_UNID_MEDIDA) VALUES ('pacotes');



CREATE TABLE TIPO_MATERIAL (
COD_TIPO NUMBER(4) PRIMARY KEY,
NOME_TIPO VARCHAR(20)
);

CREATE SEQUENCE TIPOS_COD_SEQ
MINVALUE 1
MAXVALUE 99999
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE TRIGGER TIPOS_COD_TRG 
            BEFORE INSERT ON TIPO_MATERIAL
            FOR EACH ROW
                BEGIN
            IF :NEW.COD_TIPO IS NULL THEN
                SELECT TIPOS_COD_SEQ.NEXTVAL INTO :NEW.COD_TIPO FROM DUAL;
            END IF;
            END;
/
ALTER TRIGGER TIPOS_COD_TRG ENABLE;
                     
INSERT INTO TIPO_MATERIAL (NOME_TIPO) VALUES ('Ferramentas');
INSERT INTO TIPO_MATERIAL (NOME_TIPO) VALUES ('EPI');
INSERT INTO TIPO_MATERIAL (NOME_TIPO) VALUES ('Lubrificantes');
INSERT INTO TIPO_MATERIAL (NOME_TIPO) VALUES ('Limpeza');
INSERT INTO TIPO_MATERIAL (NOME_TIPO) VALUES ('Escritório');



CREATE TABLE USERS (
ID NUMBER(4) NOT NULL ENABLE, 
NAME VARCHAR2(255 BYTE) NOT NULL ENABLE, 
EMAIL VARCHAR2(255 BYTE) NOT NULL ENABLE, 
EMAIL_VERIFIED_AT TIMESTAMP (6), 
PASSWORD VARCHAR2(255 BYTE) NOT NULL ENABLE, 
REMEMBER_TOKEN VARCHAR2(100 BYTE), 
CREATED_AT TIMESTAMP (6), 
UPDATED_AT TIMESTAMP (6), 
PERMISSION NUMBER(1,0), 
CONSTRAINT "USERS_ID_PK" PRIMARY KEY ("ID"), 
CONSTRAINT "USERS_EMAIL_UK" UNIQUE ("EMAIL")
);

CREATE SEQUENCE USERS_ID_SEQ
MINVALUE 1
MAXVALUE 99999
INCREMENT BY 1
START WITH 1
NOORDER
NOCYCLE ;

CREATE OR REPLACE TRIGGER USERS_ID_TRG
BEFORE INSERT ON USERS
        FOR EACH ROW
            BEGIN
        IF :NEW.ID IS NULL THEN
            SELECT USERS_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
        END IF;
        END;
/
ALTER TRIGGER USERS_ID_TRG ENABLE;

INSERT INTO USERS (NAME, EMAIL, PASSWORD, PERMISSION) VALUES ('Coordenador da Silva', 'coordenador@bosque.com', '$2y$10$UBcmg8habHcKlLi9BMRbx.0Vtx0OBhO65dPU9VBbuOX6Nb0NEAKl2', 1);
INSERT INTO USERS (NAME, EMAIL, PASSWORD, PERMISSION) VALUES ('Almoxarife Pereira', 'almoxarife@bosque.com','$2y$10$UBcmg8habHcKlLi9BMRbx.0Vtx0OBhO65dPU9VBbuOX6Nb0NEAKl2', 2);
INSERT INTO USERS (NAME, EMAIL, PASSWORD, PERMISSION) VALUES ('Requisitante McDonads', 'requisitante@bosque.com', '$2y$10$UBcmg8habHcKlLi9BMRbx.0Vtx0OBhO65dPU9VBbuOX6Nb0NEAKl2', 3);
INSERT INTO USERS (NAME, EMAIL, PASSWORD, PERMISSION) VALUES ('Usuário Novo', 'novo@bosque.com', '$2y$10$UBcmg8habHcKlLi9BMRbx.0Vtx0OBhO65dPU9VBbuOX6Nb0NEAKl2', NULL);
INSERT INTO USERS (NAME, EMAIL, PASSWORD, PERMISSION) VALUES ('Geovane Viana de Oliveira', 'geovane@bosque.com', '$2y$10$UBcmg8habHcKlLi9BMRbx.0Vtx0OBhO65dPU9VBbuOX6Nb0NEAKl2', 1);
INSERT INTO USERS (NAME, EMAIL, PASSWORD, PERMISSION) VALUES ('Mariana Fogaça', 'mariana@bosque.com','$2y$10$UBcmg8habHcKlLi9BMRbx.0Vtx0OBhO65dPU9VBbuOX6Nb0NEAKl2', 2);
INSERT INTO USERS (NAME, EMAIL, PASSWORD, PERMISSION) VALUES ('Jean Depicoli', 'jean@bosque.com', '$2y$10$UBcmg8habHcKlLi9BMRbx.0Vtx0OBhO65dPU9VBbuOX6Nb0NEAKl2', 3);
INSERT INTO USERS (NAME, EMAIL, PASSWORD, PERMISSION) VALUES ('Gustavo Pereira', 'gustavo@bosque.com','$2y$10$UBcmg8habHcKlLi9BMRbx.0Vtx0OBhO65dPU9VBbuOX6Nb0NEAKl2', NULL);
INSERT INTO USERS (NAME, EMAIL, PASSWORD, PERMISSION) VALUES ('Leticia', 'leticia@bosque.com', '$2y$10$UBcmg8habHcKlLi9BMRbx.0Vtx0OBhO65dPU9VBbuOX6Nb0NEAKl2', NULL);



CREATE TABLE MATERIAL (
COD_MATERIAL NUMBER(4) PRIMARY KEY,
COD_TIPO NUMBER(4),
COD_UNID_MEDIDA NUMBER(4),
NOME_MATERIAL VARCHAR(50),
ESTOQUE_MIN NUMBER(7,2),
CONS_DIA NUMBER(7,2),
LEAD_TIME NUMBER(7,2),
CONSTRAINT FK_COD_TIPO    FOREIGN KEY (COD_TIPO)        REFERENCES TIPO_MATERIAL(COD_TIPO),
CONSTRAINT FK_COD_UNIDADE FOREIGN KEY (COD_UNID_MEDIDA) REFERENCES UNIDADE_MEDIDA(COD_UNID_MEDIDA)
);

CREATE SEQUENCE MATERIAL_COD_SEQ
MINVALUE 1
MAXVALUE 99999
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE TRIGGER MATERIAL_COD_TRG 
            BEFORE INSERT ON MATERIAL
            FOR EACH ROW
                BEGIN
            IF :NEW.COD_MATERIAL IS NULL THEN
                SELECT MATERIAL_COD_SEQ.NEXTVAL INTO :NEW.COD_MATERIAL FROM DUAL;
            END IF;
            END;
/
ALTER TRIGGER MATERIAL_COD_TRG ENABLE;

INSERT INTO MATERIAL (COD_TIPO, COD_UNID_MEDIDA, NOME_MATERIAL, ESTOQUE_MIN, CONS_DIA, LEAD_TIME) VALUES (2, 1, 'Camiseta Branca tam. GG', 10, 2, 12);
INSERT INTO MATERIAL (COD_TIPO, COD_UNID_MEDIDA, NOME_MATERIAL, ESTOQUE_MIN, CONS_DIA, LEAD_TIME) VALUES (1, 1, 'Ferramenta de Torneamento ZYY Cobertura Diamantada', 10, 2, 12);
INSERT INTO MATERIAL (COD_TIPO, COD_UNID_MEDIDA, NOME_MATERIAL, ESTOQUE_MIN, CONS_DIA, LEAD_TIME) VALUES (3, 1, 'Óleo Mineral 50W20', 10, 2, 12);




CREATE TABLE ESTOQUE (
ID NUMBER(4) PRIMARY KEY,
COD_MATERIAL NUMBER(4),
COD_LOCAL NUMBER(4),
LOTE VARCHAR(30),
QUANTIDADE NUMBER(7,2),
DATA_VALIDADE DATE,
CONSTRAINT FK_ESTOQUE_LOCAIS FOREIGN KEY (COD_LOCAL) REFERENCES LOCAIS(COD_LOCAL),
CONSTRAINT UK_ESTOQUE UNIQUE (COD_MATERIAL, COD_LOCAL, LOTE)
);

CREATE SEQUENCE ESTOQUE_ID_SEQ
MINVALUE 1
MAXVALUE 99999
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE TRIGGER ESTOQUE_ID_TRG 
            BEFORE INSERT ON ESTOQUE
            FOR EACH ROW
                BEGIN
            IF :NEW.ID IS NULL THEN
                SELECT ESTOQUE_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
            END IF;
            END;
/
ALTER TRIGGER ESTOQUE_ID_TRG ENABLE;

INSERT INTO ESTOQUE (COD_MATERIAL, COD_LOCAL, LOTE, QUANTIDADE, DATA_VALIDADE) VALUES (1, 1, '1424950283', 11, '31/12/2019');
INSERT INTO ESTOQUE (COD_MATERIAL, COD_LOCAL, LOTE, QUANTIDADE, DATA_VALIDADE) VALUES (2, 2, '285675673', 42, '03/11/2019');
INSERT INTO ESTOQUE (COD_MATERIAL, COD_LOCAL, LOTE, QUANTIDADE, DATA_VALIDADE) VALUES (3, 3, '7865674950283', 23, '25/11/2019');



CREATE TABLE MOVIMENTACAO (
COD_MOVIMENTACAO NUMBER(4) PRIMARY KEY,
ESTOQUE_ID NUMBER(4),
DATA_MOV TIMESTAMP (6),
COD_USUARIO NUMBER(4),
COD_REQUISICAO NUMBER(4),
QTDE_MOVIMENTADA NUMBER(7,2),
TIPO_MOVIMENTACAO CHAR(12),
CONSTRAINT FK_MOVIMENTACAO_ESTOQUE FOREIGN KEY (ESTOQUE_ID) REFERENCES ESTOQUE(ID),
CONSTRAINT FK_MOVIMENTACAO_USER FOREIGN KEY (COD_USUARIO) REFERENCES USERS(ID),
CONSTRAINT UK_MOVIMENTACAO UNIQUE (ESTOQUE_ID, DATA_MOV)
);

CREATE SEQUENCE MOVIMENTACAO_COD_SEQ
MINVALUE 1
MAXVALUE 99999
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE TRIGGER MOVIMENTACAO_COD_TRG 
            BEFORE INSERT ON MOVIMENTACAO
            FOR EACH ROW
                BEGIN
            IF :NEW.COD_MOVIMENTACAO IS NULL THEN
                SELECT MOVIMENTACAO_COD_SEQ.NEXTVAL INTO :NEW.COD_MOVIMENTACAO FROM DUAL;
            END IF;
            END;
/
ALTER TRIGGER MOVIMENTACAO_COD_TRG ENABLE;

INSERT INTO MOVIMENTACAO (ESTOQUE_ID, DATA_MOV, COD_USUARIO, COD_REQUISICAO, QTDE_MOVIMENTADA, TIPO_MOVIMENTACAO) VALUES (1, LOCALTIMESTAMP, 1, NULL, 13, 'Aquisição');
INSERT INTO MOVIMENTACAO (ESTOQUE_ID, DATA_MOV, COD_USUARIO, COD_REQUISICAO, QTDE_MOVIMENTADA, TIPO_MOVIMENTACAO) VALUES (1, LOCALTIMESTAMP, 2, NULL, -2, 'Requisição');

INSERT INTO MOVIMENTACAO (ESTOQUE_ID, DATA_MOV, COD_USUARIO, COD_REQUISICAO, QTDE_MOVIMENTADA, TIPO_MOVIMENTACAO) VALUES (2, LOCALTIMESTAMP, 1, NULL, 44, 'Aquisição');
INSERT INTO MOVIMENTACAO (ESTOQUE_ID, DATA_MOV, COD_USUARIO, COD_REQUISICAO, QTDE_MOVIMENTADA, TIPO_MOVIMENTACAO) VALUES (2, LOCALTIMESTAMP, 2, NULL, -2, 'Requisição');

INSERT INTO MOVIMENTACAO (ESTOQUE_ID, DATA_MOV, COD_USUARIO, COD_REQUISICAO, QTDE_MOVIMENTADA, TIPO_MOVIMENTACAO) VALUES (3, LOCALTIMESTAMP, 1, NULL, 25, 'Aquisição');
INSERT INTO MOVIMENTACAO (ESTOQUE_ID, DATA_MOV, COD_USUARIO, COD_REQUISICAO, QTDE_MOVIMENTADA, TIPO_MOVIMENTACAO) VALUES (3, LOCALTIMESTAMP, 2, NULL, -2, 'Requisição');
INSERT INTO MOVIMENTACAO (ESTOQUE_ID, DATA_MOV, COD_USUARIO, COD_REQUISICAO, QTDE_MOVIMENTADA, TIPO_MOVIMENTACAO) VALUES (3, LOCALTIMESTAMP, 2, NULL, -3, 'Requisição');
INSERT INTO MOVIMENTACAO (ESTOQUE_ID, DATA_MOV, COD_USUARIO, COD_REQUISICAO, QTDE_MOVIMENTADA, TIPO_MOVIMENTACAO) VALUES (3, LOCALTIMESTAMP, 2, NULL, -5, 'Requisição');













































--FAZENDO
CREATE TABLE REQUISICAO_MATERIAL (
ID NUMBER(4) PRIMARY KEY,
COD_REQUISICAO NUMBER(4),
COD_MATERIAL NUMBER(4),
QUANTIDADE_REQ NUMBER(7,2),
CONSTRAINT FK_REQUISICAO_MATERIAL FOREIGN KEY (COD_MATERIAL) REFERENCES MATERIAL(COD_MATERIAL),
CONSTRAINT FK_MOVIMENTACAO_USER FOREIGN KEY (COD_USUARIO) REFERENCES USERS(ID),
CONSTRAINT UK_MOVIMENTACAO UNIQUE COD_REQUISICAO, DATA_MOV)
);

CREATE SEQUENCE REQMATERIAL_COD_SEQ
MINVALUE 1
MAXVALUE 99999
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE TRIGGER MOVIMENTACAO_COD_TRG 
            BEFORE INSERT ON MOVIMENTACAO
            FOR EACH ROW
                BEGIN
            IF :NEW.COD_MOVIMENTACAO IS NULL THEN
                SELECT MOVIMENTACAO_COD_SEQ.NEXTVAL INTO :NEW.COD_MOVIMENTACAO FROM DUAL;
            END IF;
            END;
/
ALTER TRIGGER MOVIMENTACAO_COD_TRG ENABLE;